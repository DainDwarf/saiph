About:
------
saiph - [Stupid|Silly|Smart|Superior]* AI Playing netHack.
* use a descriptive word beginning with "S".

The project is MIT licensed.


Fetch code:
-----------
Given that you're reading this document there's a fair chance you've already
downloaded the code, but nevertheless, fetch it with Git here:
git clone git://github.com/canidae/saiph.git

Alternative mirror:
git clone http://projects.exent.net/saiph.git


Keeping your repo updated:
--------------------------
You should pull regularly with this command:
 git pull canidae master
Replace "canidae" if you used another name for that repo.


Building & running:
-------------------
If you're running locally you'll have to do this once before executing saiph:
 export NETHACKOPTIONS=@<path to nethackrc>

If you are running on a public server, you will need to create a file named
".account" in the directory where you run saiph; it must have three lines,
consisting of the host name, the dgamelaunch user name, and the password,
like so:
nethack.alt.org
saiph
<password>

Furthermore, you will need to pass the -t option to saiph to run on a public
server.

Connecting to non-dgamelaunch-based servers, such as the ones that run the
/dev/null tournament, will not work. Patches welcome.

You'll also need a terminal that's capable of displaying at least 160x50
characters.

Then build & start the bot:
 mkdir build
 cd build
 cmake ..
 make
 ./saiph


People who are working on or have contributed to saiph (ordered by activity):
-----------------------------------------------------------------------------
Vidar Wahlberg <canidae@exent.net>, aka. canidae
Stefan O'Rear <stefanor@cox.net>, aka. sorear
Patric Mueller <bhaak@gmx.net>, aka. bhaak
Adrien Panhaleux <adrien.panhaleux@ens-lyon.fr>, aka. DainDwarf
Kenny Root <kenny@the-b.org>, aka. kRutOn
Jeffrey Bosboom <doctorsunglasses@dslextreme.com>, aka. DrSunglasses


TODO:
-----
* don't rely on autopickup for gold
* loot-loop, dropping & picking up stuff when she is burdened
* a macro for debugging or #ifdef DEBUG\n Debug::foo() << bar << endl;\n #endif
* dip for excalibur (analyzer should be removed when excalibur is found)
* engrave-testing wands (and keep the dangerous ones)
* detect traps by message (currently won't detect traps beneath item(s))
* don't attempt to loot items from pit we didn't fall into
* don't attempt to open door next to a pit she fell into
* don't kick down doors from corridors without standing in front of it
* don't kick down doors when she got a hurt leg
